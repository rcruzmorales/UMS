

@{
    ViewBag.Title = "Edit";
    Layout = null;
}

@using UMS.Models;
@model UMS.Models.UserInfo
@Styles.Render("~/Content/css")
<link href="~/Content/Layout.css" rel="stylesheet" />


@using (Html.BeginForm("Edit", "Client", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.User_Id)
    @Html.HiddenFor(model => model.Role_Id)
    @Html.HiddenFor(model => model.Status_Id)
    @Html.HiddenFor(model => model.Picture_Id)
    @Html.HiddenFor(model => model.PhoneNumber)

    <div class="row">

        <div class="col-md-6">
            @Html.Label("Profile")<br />
            <label for="file" class="btn btn-primary btn-file">
                Browse <input type="file" id="imageBrowse" name="file" class="btn btn-primary btn-sm" />
            </label>
        </div>

        <div class="col-md-6">
            <div id="imgPreview" style="display: none">
                <img class="img-responsive" id="targetImg" />
                <div class="caption">
                    <a href="#" onclick="ClearPreview()"><i class="glyphicon glyphicon-trash"></i></a>
                    <span id="description"></span>
                </div>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-md-6">
            @Html.LabelFor(model => model.UserName, new { @class = "control-label lab" })
            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control val",@readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
        
        <div class="col-md-6">
            @Html.LabelFor(model => model.Email, new { @class = "control-label lab" })
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control val", @readonly="readonly"} })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>


    </div>
    <div class="row">
        
        <div class="col-md-6">
            @Html.LabelFor(model => model.FirstName, new { @class = "control-label lab" })
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control val" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-6">
                @Html.LabelFor(model => model.LastName, new { @class = "control-label lab" })
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control val" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="row">
            <div class="col-md-6">
                @Html.LabelFor(model => model.Address, new { @class = "control-label lab" })
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control val" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-6">
                @Html.LabelFor(model => model.City, new { @class = "control-label lab" })
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control val" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                @Html.LabelFor(model => model.Country, new { @class = "control-label lab" })
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control val" } })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-6">
                @Html.LabelFor(model => model.Zipcode, new { @class = "control-label lab" })
                @Html.EditorFor(model => model.Zipcode, new { htmlAttributes = new { @class = "form-control val" } })
                @Html.ValidationMessageFor(model => model.Zipcode, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <input type="submit" value="Save Changes" class="btn btn-primary btn-lg" />

}

@Scripts.Render("~/bundles/modernizr")
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $(document).ready(function () {

        $("#imageBrowse").change(function () {

            var File = this.files;

            if (File && File[0]) {
                ReadImage(File[0]);
            }

        });


    });


    var ReadImage = function (file) {

        var reader = new FileReader;
        var image = new Image;

        reader.readAsDataURL(file);
        reader.onload = function (_file) {

            image.src = _file.target.result;
            image.onload = function () {

                var height = this.height;
                var width = this.width;


                $("#targetImg").attr('src', _file.target.result);
                $("#imgPreview").show();

            }

        }

    }

    var ClearPreview = function () {
        $("#imageBrowse").val('');
        $("#targetImg").attr('src', '');
        $("#imgPreview").hide();

    }

    $(function(){
        var rx = /INPUT|SELECT|TEXTAREA/i;

        $(document).bind("keydown keypress", function(e){
            if( e.which == 8 ){
                if(!rx.test(e.target.tagName) || e.target.disabled || e.target.readOnly ){
                    e.preventDefault();
                }
            }
        });
    });
</script>




@model IEnumerable<UMS.Models.UserInfo>
@using System.Data.Entity.Validation
@using System.Diagnostics.Eventing.Reader
@using OfficeOpenXml.FormulaParsing.Excel.Functions.Math
@using UMS.Controllers;
@{
    List<Tuple<DbEntityValidationException,int>> errorList = new List<Tuple<DbEntityValidationException, int>>(((AdministrationController)this.ViewContext.Controller).getErrorList());
    ViewBag.Title = "Admin Dashboard";
}

@Styles.Render("~/bundles/DataTables")


<div class="container-fluid">
    
    <div class="col-md-3" id="left-panel">
        @Html.Partial("Profile_Pic", new UMS.Models.UserInfo())
    </div>

    <div class="col-md-9" id="right-panel">
        <br/><br/>
        <h2 align="center">Admin Dashboard</h2>
        <hr/>

        @using (Html.BeginForm("ExcelImport", "Administration", FormMethod.Post, new {enctype = "multipart/form-data"}))
        {
            
            <div class="btn-group col-md-push-3">
                <button type="button" id="btnAddUser" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#addUserModal">Add User</button>
            </div>

            @Html.AntiForgeryToken()
            <div class="btn-group col-md-push-5" style="margin-top: 40px">
                <button type="submit" id="btnImport" value="Batch User Upload" class="btn btn-primary btn-lg">Batch User upload</button>&nbsp;<br/><br/><br/>
                <input type="file" class="btn-primary" name="UploadedFile" placeholder="Place your excel file here"/>
            </div>

           

        }

        <form id="adminForm">

            <table class="table table-striped table-responsive" id="adminTable">
                <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.UserName)</th>

                    <th>@Html.DisplayNameFor(model => model.Email)</th>

                    <th>@Html.DisplayNameFor(model => model.FirstName)</th>

                    <th>@Html.DisplayNameFor(model => model.LastName)</th>

                    <th>@Html.DisplayNameFor(model => model.Role.RoleName)</th>

                    <th>@Html.DisplayNameFor(model => model.Status.StatusName)</th>

                    <th>@Html.DisplayName("Profile")</th>

                    <th style="display: none;">Phone Number</th>

                    <th style="display: none;">Address</th>

                    <th style="display: none;">City</th>

                    <th style="display: none;">State</th>

                    <th style="display: none;">Zip Code</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.UserName)</td>

                        <td> @Html.DisplayFor(modelItem => item.Email)</td>

                        <td>@Html.DisplayFor(modelItem => item.FirstName)</td>

                        <td>@Html.DisplayFor(modelItem => item.LastName)</td>

                        <td>@Html.DisplayFor(modelItem => item.Role.RoleName)</td>

                        <td>@Html.DisplayFor(modelItem => item.Status.StatusName)</td>

                        <td>

                            <a data-toggle="modal" data-target="#ViewProfileModal" class="btn btn-info btn-sm ViewData" data-id="@item.User_Id"><span class="glyphicon glyphicon-user">&nbsp;View</span></a>
                            <a data-toggle="modal" data-target="#editUserModal" class="btn btn-success btn-sm EditData" data-id="@item.User_Id"><span class="glyphicon glyphicon-edit">&nbsp;Edit</span></a>
                            <a data-toggle="modal" data-target="#deleteUserModal" class="btn btn-danger btn-sm RemoveData" data-id="@item.User_Id"><span class="glyphicon glyphicon-remove-sign">&nbsp;Remove</span></a>

                        </td>


                        <td style="display: none;">@Html.DisplayFor(modelItem => item.PhoneNumber)</td>

                        <td style="display: none;">@Html.DisplayFor(modelItem => item.Address)</td>

                        <td style="display: none;">@Html.DisplayFor(modelItem => item.City)</td>

                        <td style="display: none;">@Html.DisplayFor(modelItem => item.Country)</td>

                        <td style="display: none;">@Html.DisplayFor(modelItem => item.Zipcode)</td>

                    </tr>
                }
                </tbody>
            </table>
        </form>
    </div>


</div>
<div id="addUserModal" class="modal fade " role="dialog">
    <div class="modal-dialog " style="margin-top: 7%;">
        <div class="modal-content">
            <div class="modal-header modalHeader">
                <h2 class="modal-title modalTitle text-center">Add User</h2>
                <button class="close" data-toggle="modal" data-dismiss="modal" id="xClose">&times;</button>
            </div>
            <div class="modal-body">
                <div id="modal-content"></div>
            </div>
        </div>
    </div>
</div>


<div id="AdminViewProfileModal" class="modal fade" role="dialog">
    <div class="modal-dialog" style="margin-top: 7%;">
        <div class="modal-content">
            <div class="modal-header modalHeader">
                <h2 class="modal-title modalTitle text-center">Profile</h2>
                <button type="button" class="close" data-toggle="modal" data-dismiss="modal" id="xClose">&times;</button>
            </div>
            <div class="modal-body">
                <div id="modal-content-Details"> </div>
            </div>
        </div>
    </div>
</div>

<div id="AdminRemovesUserModal" class="modal fade" role="dialog">
    <div class="modal-dialog" style="margin-top: 7%;">
        <div class="modal-content">
            <div class="modal-header modalHeader">
                <h2 class="modal-title modalTitle text-center">Remove User</h2>
                <button type="button" class="close" data-toggle="modal" data-dismiss="modal" id="xClose">&times;</button>
            </div>
            <div class="modal-body">
                <div id="modal-content-Delete"> </div>
            </div>
        </div>
    </div>
</div>

<div id="duplicateEmailModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-sm" style="margin-top: 7%;">
        <div class="modal-content">
            <div class="modal-header">
                <div class=" modal-title modalTitle h3">Alert Messgae</div>
                <div class="modal-body">
                    @Html.Raw("A user already has the same username or emails, please use another")
                </div>
                <div class="modal-footer">
                    <input type="button" value="OK" class="btn btn-primary btn-lg" id="OK" data-dismiss="modal" />
                </div>
            </div>
        </div>
    </div>
</div>



<div id="UploadModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-sm" style="margin-top: 7%;">
        <div class="modal-content">
            <div class="modal-header">
                <div class=" modal-title modalTitle h3">Sucess</div>
                <div class="modal-body">
                    @if (ViewBag.ExcelFormat == 1)
                    {
                        @Html.Raw("Make sure all cells are filled")
                    }
                    else if (errorList.Count == 0)
                    {
                        @Html.Raw("Upload was Successful")
                    }
                    else
                    {
                        @Html.Raw("The following errors where shown in the upload:")
                        <ul>
                            @foreach (var dbe in errorList)
                            {
                            foreach (var eve in dbe.Item1.EntityValidationErrors)
                            {
                                foreach (var m in eve.ValidationErrors)
                                {
                                        <li>Row @dbe.Item2 : @m.ErrorMessage</li>
                                    }
                            }
                        }
                        </ul>
                    }
                </div>
                <div class="modal-footer">
                    <input type="button" value="OK" class="btn btn-primary btn-lg" id="OK" onclick="location.href = '@Url.Action("Index","Administration")'" />
                </div>
            </div>
        </div>
    </div>
</div>

<div id="confirmationEditModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-sm" style="margin-top: 7%;">
        <div class="modal-content">
            <div class="modal-header">
                <div class=" modal-title modalTitle h3">Sucess</div>
                <div class="modal-body">
                    @Html.Raw("User information was update")
                </div>
                <div class="modal-footer">
                    <input type="button" value="OK" class="btn btn-primary btn-lg" id="OK" onclick="location.href = '@Url.Action("Index","Administration")'" />
                </div>
            </div>
        </div>
    </div>
</div>

<div id="confirmationRemoveModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-sm" style="margin-top: 7%;">
        <div class="modal-content">
            <div class="modal-header">
                <div class=" modal-title modalTitle h3">Sucess</div>
                <div class="modal-body">
                    @Html.Raw("User was removed")
                </div>
                <div class="modal-footer">
                    <input type="button" value="OK" class="btn btn-primary btn-lg" id="OK" onclick="location.href = '@Url.Action("Index","Administration")'" />
                </div>
            </div>
        </div>
    </div>
</div>

<div id="confirmationAddModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-sm style=" margin-top: 7%;>
        <div class="modal-content">
            <div class="modal-header">
                <div class=" modal-title modalTitle h3">Registration Succesfull</div>
                <div class="modal-body">
                    @Html.Raw("User has been added")
                </div>
                <div class="modal-footer">
                    <input type="button" value="OK" class="btn btn-primary btn-lg" id="OK" onclick="location.href = '@Url.Action("Index","Administration")'" />
                </div>
            </div>
        </div>
    </div>
</div>

   

@section scripts{
    @Scripts.Render("~/bundles/jqueryDataTables")
    <script>

        $(document).ready(function() {

            var table = $("#adminTable").DataTable({
                "paging": false,
                "scroller": true,
                "scrollY": 500,
                "scrollX":1000,
                "dom": "<'row'<'col-md-3'f><'col-md-6'B>trip>",
                "processing":true,
                buttons: [
                    {
                        extend: 'excelHtml5',
                        className: 'btn btn-primary',
                        text: 'Export To Excel',
                        exportOptions: { columns: [0, 1, 2, 3,7,8,9,10,11,4,5] },
                        init: function(api, node, config) {
                            $(node).removeClass('dt-button buttons-excel buttons-html5');
                        }

                    }
                ],
                "columnDefs": [
                    { "width": "2%", "targets":[1]},
                    { "width": "6%", "targets": [0, 4, 5] },
                    { "width": "8%", "targets": [2,3,7, 8, 9, 10, 11] },
                    { "visible": false,"targets":[7,8,9,10,11]}
                ]

            });
        });




        $("#btnAddUser").click(function() {

            $("#modal-content").load("/Administration/Create");
        });


        var adminDetailsPath = '/Administration/Details';

        $(function() {
            $(".ViewData").click(function() {

                var $buttonClicked = $(this);
                var id = $buttonClicked.attr('data-id');
                var options = { keyboard: true };
                $.ajax({
                    type: "GET",
                    url: adminDetailsPath,
                    cache:false,
                    contentType: "application/json; charset=utf-8",
                    data: { "Id": id },
                    datatype: "json",
                    success: function(data) {

                        $('#modal-content-Details').html(data);
                        $('#AdminViewProfileModal').modal(options);
                        $('#AdminViewProfileModal').modal('show');

                    },
                    error: function() {
                        alert("Dynamic content load failed.");
                    }
                });
            });

        });

        var adminPathEdit = '/Administration/Edit';

        $(function() {
            $(".EditData").click(function() {

                var $buttonClicked = $(this);
                var id = $buttonClicked.attr('data-id');
                var options = { "backdrop": "static", keyboard: true };
                $.ajax({
                    type: "GET",
                    url: adminPathEdit,
                    contentType: "application/json; charset=utf-8",
                    cache: false,
                    data: { "Id": id },
                    datatype: "json",
                    success: function(data) {

                        $('#modal-content-Edit').html(data);
                        $('#AdminEditUserProfile').modal(options);
                        $('#AdminEditUserProfile').modal('show');

                    },
                    error: function() {
                        alert("Dynamic content load failed.");
                    }
                });
            });

        });

        var adminPathDelete = '/Administration/Delete';
        $(function() {
            $(".RemoveData").click(function() {

                var $buttonClicked = $(this);
                var id = $buttonClicked.attr('data-id');
                var options = { "backdrop": "static", keyboard: true };
                $.ajax({
                    type: "GET",
                    url: adminPathDelete,
                    contentType: "application/json; charset=utf-8",
                    data: { "Id": id },
                    datatype: "json",
                    success: function(data) {

                        $('#modal-content-Delete').html(data);
                        $('#AdminRemovesUserModal').modal(options);
                        $('#AdminRemovesUserModal').modal('show');

                    },
                    error: function() {
                        alert("Dynamic content load failed.");
                    }
                });
            });

        });

        var verifyEmail = '@ViewBag.Duplicate';

        if (verifyEmail == '0') {
            $("#duplicateEmailModal").modal("hide");
        } else if (verifyEmail == '1') {
            $("#duplicateEmailModal").modal("show");
        }


        $(function() {

            $(document).on('change',
                ':file',
                function() {
                    var input = $(this),
                        numFiles = input.get(0).files ? input.get(0).files.length : 1,
                        label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
                    input.trigger('fileselect', [numFiles, label]);
                });

            $(document).ready(function() {
                $(':file').on('fileselect',
                    function(event, numFiles, label) {

                        var input = $(this).parents('.input-group').find(':text'),
                            log = numFiles > 1 ? numFiles + ' files selected' : label;

                        if (input.length) {
                            input.val(log);
                        } else {
                            if (log) alert(log);
                        }

                    });
            });

        });



        var confirmationUpload = '@ViewBag.ConfirmUpload';
        if (confirmationUpload == '1') {
            $("#UploadModal").modal("toggle");
        }

        else if (confirmationUpload == '0') {
            $("#UploadModal").modal("hide");
        }

        var confirmationEdit = '@ViewBag.ConfirmEdit';
        if (confirmationEdit == '1') {
            $("#confirmationEditModal").modal("toggle");
        }

        else if (confirmationEdit == '0') {
            $("#confirmationEditModal").modal("hide");
        }

        var confirmationRemove = '@ViewBag.ConfirmRemove';
        if (confirmationRemove== '1') {
            $("#confirmationRemoveModal").modal("toggle");
        }

        else  {
            $("#confirmationRemoveModal").modal("hide");
        }

        var confirmationAdd = '@ViewBag.ConfirmAdd';
        if (confirmationAdd== '1') {
            $("#confirmationAddModal").modal("toggle");
        }

        else if (confirmationAdd == '0') {
            $("#confirmationAddModal").modal("hide");
        }

        $('INPUT[type="file"]').change(function () {

            if (this.value != '') {
                var ext = this.value.match(/\.(.+)$/)[1];
                switch (ext) {
                case 'xls' :
                case 'xlsx':
                    $('#uploadButton').attr('disabled', false);
                    break;
                default:
                    alert('This is not an allowed file type.');
                    this.value = '';
                }
            }

        });
    </script>

}

